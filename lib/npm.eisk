#!/bin/bash

__command_exists npm || {
  echo "npm is not installed."
  return
}

# Update package version
# Usage: bump <version>
# where <version> is one of:
#     major, minor, patch
bump() {
  if [ "$1" != "" ] && [ "$1" ]; then
    local getChange="$(changes)"

    if [ $getChange = false ]; then
      npm version "$1" -m "chore(release): %s [skip ci]"
      # git push --tags
    else
      gcommit "chore(bump): before update"
    fi
  else
    echo ""
    printf "Usage: bump ${yellowb}<version>${end}"
    echo ""
    echo "where <version> is one of:"
    printf "\n    ${purple}major, minor, patch${end}"
    echo ""
  fi
}

# Get your package.json version
version() {
  local PACKAGE_VERSION=$(cat package.json \
    | grep version \
    | head -1 \
    | awk -F: '{ print $2 }' \
    | sed 's/[",]//g' \
    | tr -d '[[:space:]]')

  echo -e "${greenb}v${PACKAGE_VERSION}${end}"
}

__bump_completion() {
  versions=()
  versions+=("major")
  versions+=("minor")
  versions+=("patch")
  COMPREPLY=($(compgen -W "$(printf "%q " "${versions[@]}")" -- "${COMP_WORDS[COMP_CWORD]}"))
}

__command_exists complete || return

complete -F __bump_completion bump
